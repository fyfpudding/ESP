#include "mbed.h"
#include "C12832.h"

C12832 lcd(p5, p7, p6, p8, p11);
DigitalIn button(p10);
AnalogIn potentiometer(p20);

DigitalOut led1(p5); //left
DigitalOut led2(p6); //bottom
DigitalOut led3(p7); //top
DigitalOut led4(p8); //right

int main()
{
    int timer = 0;
    bool gameRunning = false;
    int difficulty = 0;

    lcd.cls();
    lcd.locate(0, 15);
    lcd.printf("Whack-A-Mole!");
    lcd.locate(0, 26);
    lcd.printf("Press button to start");

    while (true) {
        if (button == 1) {
            if (gameRunning) {
                // Restart the game and timer
                timer = 30;
                lcd.cls();
                lcd.locate(0, 26);
                lcd.printf("Game Reset!");
            } else {
                // Start the game and timer
                gameRunning = true;
                timer = 30;
                lcd.cls();
                lcd.locate(0, 26);
                lcd.printf("Game started!");
            }

            // Difficulty level selection
            float potValue = potentiometer.read();  // Read the potentiometer value
            if (potValue < 0.33) {
                difficulty = 1;  // Easy level
            } else if (potValue < 0.67) {
                difficulty = 2;  // Medium level
            } else {
                difficulty = 3;  // Hard level
            }

            while (timer > 0) {
                // LED control for representing moles based on difficulty level
                int numLEDs = 0;
                if (difficulty == 1) {
                    numLEDs = 1;
                } else if (difficulty == 2) {
                    numLEDs = 2;
                } else if (difficulty == 3) {
                    numLEDs = 3;
                }

                for (int i = 0; i < numLEDs; i++) {
                    // Randomly select an LED to light up
                    int ledNum = rand() % 4 + 1;  // Generate a random number between 1 and 4
                    switch (ledNum) {
                        case 1:
                            led1 = 1;
                            break;
                        case 2:
                            led2 = 1;
                            break;
                        case 3:
                            led3 = 1;
                            break;
                        case 4:
                            led4 = 1;
                            break;
                        default:
                            break;
                    }

                    wait(2.0);  // Wait for 2 seconds

                    // Turn off the corresponding LED
                    switch (ledNum) {
                        case 1:
                            led1 = 0;
                            break;
                        case 2:
                            led2 = 0;
                            break;
                        case 3:
                            led3 = 0;
                            break;
                        case 4:
                            led4 = 0;
                            break;
                        default:
                            break;
                    }

                    // Exit the loop if the button is released
                    if (button == 0) {
                        break;
                    }
                }

                // Exit the outer loop if the button is released or the game timer reaches 0
                if (button == 0 || timer == 0) {
                    break;
                }

                lcd.locate(0, 15);
                lcd.printf("Time Left: %2d s", timer);
                timer--;
                wait(1.0);

                button.read();  // Read the button state
            }

            if (timer == 0) {
                // End the game if the timer reaches 0
                gameRunning = false;
                lcd.cls();
                lcd.locate(0, 15);
                lcd.printf("Bye bye!");
            }
        }

        wait(0.1);
    }
}
